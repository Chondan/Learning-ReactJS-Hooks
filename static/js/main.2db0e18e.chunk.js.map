{"version":3,"sources":["components/useState.js","components/useEffect.js","components/useMemo.js","components/List.js","components/useCallback.js","components/ThemeContext.js","components/useContext.js","components/Todo.js","components/useReducer.js","App.js","index.js"],"names":["UseStateExample","useState","count","color","state","setState","msg","setMsg","onClick","prevState","style","excludeprevCount","Example1","resourceType","setResourceType","items","setItems","console","log","useEffect","fetch","then","res","json","className","height","overflow","map","item","key","id","JSON","stringify","Example2","Math","random","toFixed","setRandom","Example3","window","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","UseEffectExample","number","setNumber","dark","setDark","themes","useMemo","backgroundColor","doubleNumber","num","i","slowFunctionDoubleNumber","type","value","onChange","e","target","prevDark","padding","UseMemoExample","List","getItems","useCallback","incrementor","UseCallbackExample","ThemeContext","React","createContext","ThemeUpdateContext","ThemeProvider","children","theme","setTheme","Provider","Container","props","Button","Box","toggleThemeFunc","useContext","Consumer","styles","width","display","justifyContent","alignItems","border","margin","UseContextExample","Todo","todo","toggleTodo","deleteTodo","complete","name","ACTION","useReducer","action","dispatch","setName","ACTIONS","todos","payload","newTodo","filter","Date","now","find","onSubmit","preventDefault","UseReducerExample","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2db0e18e.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n\nfunction UseStateExample() {\n    // useState() always returned an array with 2 values\n    const [state, setState] = useState({ count: 0, color: \"blue\" });\n    const [msg, setMsg] = useState(() => \"Hello world\");\n    function decrementCount() {\n        setState(prevState => ({\n            ...prevState, count: prevState.count - 1\n        }));\n    }\n    function incrementCount() {\n        setState(prevState => {\n            const { count, ...excludeprevCount } = prevState;\n            // if we place spread syntax after count prop, the count value that we have just set will be \n            // overridden with the previous value\n            // * so put it in very front of properties like I we do on decrementCount() method\n            if (count + 1 === 10) {\n                setMsg(\"Hola, Como estad?\");\n            }\n            return { count: count + 1, ...excludeprevCount,  }\n        });\n    }\n    return (\n        <>\n            <h2>useState</h2>\n            <p>React Hooks must be called in the exact same order in every component render.</p>\n            <div><strong>{msg}</strong></div><br />\n            <button onClick={decrementCount}>-</button>\n            <span> {state.count} </span>\n            <span style={{ color: state.color }}> {state.color} </span>\n            <button onClick={incrementCount}>+</button>\n        </>\n    );\n}\n\nexport default UseStateExample;","import React, { useEffect, useState } from 'react';\n\nfunction Example1() {\n    const [resourceType, setResourceType] = useState(\"posts\");\n    const [items, setItems] = useState([]);\n    console.log(\"example1: render\");\n    useEffect(() => {\n        console.log(\"example1: resource type changed\");\n        fetch(`https://jsonplaceholder.typicode.com/${resourceType}`)\n        .then(res => res.json())\n        .then(json => setItems(json));\n        return () => {\n            // willUnmount\n            console.log(\"clean up\");\n        }\n    }, [resourceType]);\n    useEffect(() => {\n        console.log(\"example1: mounted\");\n    }, []);\n    return (\n        <div>\n            <h3>Example 1</h3>\n            <button onClick={() => setResourceType(\"posts\")}>Posts</button>\n            <button onClick={() => setResourceType(\"users\")}>Users</button>\n            <button onClick={() => setResourceType(\"comments\")}>Comments</button>\n            <h4>{resourceType}</h4>\n            <div \n            className=\"items-container\"\n            style={{ height: \"300px\", overflow: \"auto\" }}\n            >\n                {items.map(item => (\n                    <pre key={item.id}>{JSON.stringify(item)}</pre>\n                ))}\n            </div>\n        </div>\n    );\n}\nfunction Example2() {\n    const [random, setRandom] = useState(Math.random().toFixed(2));\n    useEffect(() => {\n        console.log(\"example2: mounted\");\n    }, []);\n    return (\n        <div>\n            <h3>Example 2</h3>\n            <span>{random} </span>\n            <button onClick={() => setRandom(Math.random().toFixed(2))}>Random</button>\n        </div>\n    )\n}\nfunction Example3() {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const handleResize = () => {\n        setWindowWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        // didMount\n        window.addEventListener(\"resize\", handleResize);\n        return () => {\n            // cleanup (willUnmount)\n            window.removeEventListener(\"resize\", handleResize);\n        }\n    }, []);\n    \n    return (\n        <div>\n            <h3>Example 3</h3>\n            <div>\n                windowWidth: {windowWidth}\n            </div>\n        </div>\n    );\n}\n\nfunction UseEffectExample() {\n    return (\n        <div>\n            <h2>useEffect</h2>\n            <Example1 />\n            <Example2 />\n            <Example3 />\n        </div>\n    );\n}\n\nexport default UseEffectExample;","import React, { useState, useMemo, useEffect } from 'react';\n\nfunction Example1() {\n    const [number, setNumber] = useState(0);\n    const [dark ,setDark] = useState(false);\n    const themes = useMemo(() => {\n        return {\n            backgroundColor: dark ? \"black\" : \"white\",\n            color: dark ? \"white\" : \"black\"\n        };\n    }, [dark]); \n        // useMemo to capture the older output if the new input is not changed\n    // * in this case number is the depedencies that we are looking for\n    // * if the value of number change we have to compute the value again, but if it's not we do not need to do it again.\n    const doubleNumber = useMemo(() => {\n        return slowFunctionDoubleNumber(number);\n    }, [number]);\n    useEffect(() => {\n        console.log(\"Theme changed\");\n    }, [themes]);\n    return (\n        <div>\n            <input type=\"number\" value={number} onChange={(e) => setNumber(e.target.value)} />\n            <button onClick={() => setDark(prevDark => !prevDark)}>Change Theme</button>\n            <div style={{...themes, padding: \"5px\"}}>{doubleNumber}</div>\n        </div>\n    );\n}\nfunction slowFunctionDoubleNumber(num) {\n    console.log(\"Calling Slow Function\");\n    for (let i = 0; i <= 1000000000; i++) {}\n    return num * 2;\n}\n\nfunction UseMemoExample() {\n    return (\n        <div>\n            <h2>useMemo</h2>\n            <Example1 />\n        </div>\n    );\n}\n\nexport default UseMemoExample;","import React, { useEffect, useState } from 'react';\n\nfunction List({ getItems }) {\n    const [items, setItems] = useState([]);\n    useEffect(() => {\n        setItems(getItems(5));\n        console.log(\"Updating Items\");\n    }, [getItems]);\n    return (\n        <div>\n            {items.map(item => (\n                <div key={item}>{item}</div>\n            ))}\n        </div>\n    );\n}\n\nexport default List;","import React, { useState, useCallback } from 'react';\nimport List from './List';\n\nfunction Example1() {\n    const [number, setNumber] = useState(0);\n    const getItems = useCallback((incrementor) => {\n        // useCallback only recreate the getItems() function\n        // when the number changed\n        // * 1 big different between useCallback and useMemo\n        // * useMemo take the function and return the value of that funciton\n        // ** useMemo, getItems = array\n        // * useCallbake return the entire function not just the return value of that function\n        // ** useCallback, getItems = function() {return array }\n        return [+number + incrementor, +number + 1 + incrementor, +number + 2 + incrementor];\n    }, [number]);\n    const [dark, setDark] = useState(false);\n    const themes = {\n        backgroundColor: dark ? \"black\" : \"white\",\n        color: dark ? \"white\" : \"black\"\n    };\n    \n    return (\n        <div style={themes}>\n            <input type=\"number\" value={number} onChange={(e) => setNumber(e.target.value)} />\n            <button onClick={() => setDark(prevDark => !prevDark)}>Toggle theme</button>\n            <List getItems={getItems} />\n        </div>\n    );\n}\n\nfunction UseCallbackExample() {\n    return (\n        <div>\n            <h2>useCallback</h2>\n            <Example1 />\n            <div><strong>useMemo vs useCallback</strong></div>\n            <p>useMemo: take a function and return the value of that function not the entire function. (so we can't pass parameter to it)</p>\n            <p>useCallback: return the entire function (so we can pass parameter to it)</p>\n        </div>\n    );\n}\n\nexport default UseCallbackExample;","import React, { useState } from 'react';\n\nconst ThemeContext = React.createContext();\nconst ThemeUpdateContext = React.createContext();\n\nfunction ThemeProvider({ children }) {\n    const [theme, setTheme] = useState(\"light\");\n    function handleClick() {\n        setTheme(theme => theme === \"dark\" ? \"light\" : \"dark\");\n    }\n    return (\n        <ThemeContext.Provider value={theme}>\n            <ThemeUpdateContext.Provider value={handleClick}>\n                {children}\n            </ThemeUpdateContext.Provider>\n        </ThemeContext.Provider>\n    );\n}\n\nexport { ThemeProvider as default, ThemeContext, ThemeUpdateContext };","import React, { useContext } from 'react';\nimport ThemeProvider, { ThemeContext, ThemeUpdateContext } from './ThemeContext';\n\nfunction Example1() {\n    return (\n        <>\n            <h3>Example 1</h3>\n            <ThemeProvider>\n                <Container />\n            </ThemeProvider>\n        </>\n    );\n}\nfunction Container(props) {\n    return (\n        <>\n            <Button {...props} />\n            <Box />\n        </>\n    );\n}\nfunction Button(props) {\n    const toggleThemeFunc = useContext(ThemeUpdateContext);\n    return (\n        <ThemeContext.Consumer>\n            {theme => (\n                <button \n                    style={{ backgroundColor: theme === \"dark\" ? \"black\" : \"white\", color: theme === \"dark\" ? \"white\" : \"black\"}} \n                    onClick={toggleThemeFunc}\n                >\n                    Toggle theme\n                </button>\n            )}\n        </ThemeContext.Consumer>\n    );\n}\nfunction Box() {\n    const theme = useContext(ThemeContext);\n    const styles = {\n        width: \"150px\", \n        height: \"150px\",\n        padding: \"5px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        border: \"1px solid black\",\n        margin: \"10px\",\n        backgroundColor: theme === \"dark\" ? \"black\" : \"white\",\n        color: theme === \"dark\" ? \"white\" : \"black\",\n    }\n    return (\n        <div style={styles}>BOX</div>\n    );\n}\n\nfunction UseContextExample() {\n    return (\n        <div>\n            <h2>useContext</h2>\n            <Example1 />\n        </div>\n    );\n}\n\nexport default UseContextExample;","import React from 'react';\n\nfunction Todo({ todo, toggleTodo, deleteTodo }) {\n    return (\n        <div>\n            <span \n                style={{\n                    color: todo.complete ? \"#AAA\" : \"#000\"\n                }}\n            >\n                {todo.name}\n            </span>\n            <button onClick={() => toggleTodo(todo.id)}>Toggle</button>\n            <button onClick={deleteTodo}>Delete</button>\n        </div>\n    );\n}\n\nexport default Todo;","import React, { useReducer, useState } from 'react';\nimport Todo from './Todo';\n\nconst ACTION = {\n    INCREMENT: \"increment\",\n    DECREMENT: \"decrement\",\n};\n\nfunction Example1() {\n    function reducer(state, action) {\n        switch(action.type) {\n            case ACTION.DECREMENT:\n                return { count: state.count - 1};\n            case ACTION.INCREMENT:\n                return { count: state.count + 1};\n            default:\n                return state;\n        }\n    }\n    const [state, dispatch] = useReducer(reducer, { count: 0 });\n    function decrement() {\n        dispatch({ type: ACTION.DECREMENT });\n    }\n    function increment() {\n        dispatch({ type: ACTION.INCREMENT });\n    }\n    return (\n        <>\n            <h3>Example 1</h3>\n            <button onClick={decrement}>-</button>\n            <span> {state.count} </span>\n            <button onClick={increment}>+</button>\n        </>\n    );\n}\nfunction Example2() {\n    const [name, setName] = useState('');\n    const ACTIONS = {\n        ADD_TODO: \"add-todo\",\n        TOGGLE_TODO: \"toggle-todo\",\n        DELETE_TODO: \"delete-todo\",\n    };\n    const [todos, dispatch] = useReducer(reducer, []);\n    function reducer(todos, action) {\n        switch (action.type) {\n            case ACTIONS.ADD_TODO:\n                if (!action.payload.name) { return todos; }\n                return [...todos, newTodo(action.payload.name)];\n            case ACTIONS.TOGGLE_TODO:\n                return [...todos];\n            case ACTIONS.DELETE_TODO:\n                return todos.filter(todo => todo.id !== action.payload.id);\n            default: \n                return todos;\n        }\n    }\n    function newTodo(name) {\n        return { id: Date.now(), name: name, complete: false };\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        dispatch({ type: ACTIONS.ADD_TODO, payload: { name: name } });\n        setName('');\n    }\n    function toggleTodo(id) {\n        const todo = todos.find(todo => todo.id === id);\n        todo.complete = !todo.complete;\n        dispatch({ type: ACTIONS.TOGGLE_TODO });\n    }\n    return(\n        <>\n            <h3>Example 2</h3>\n            <h4>Todos</h4>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\" \n                    onChange={(e) => setName(e.target.value)}\n                    value={name}\n                    />\n            </form>\n            {\n                todos.map(todo => (\n                    <Todo deleteTodo={() => dispatch({ type: ACTIONS.DELETE_TODO, payload: { id: todo.id } })} toggleTodo={toggleTodo} key={todo.id} todo={todo} />\n                ))\n            }\n        </>\n    );\n}\n\nfunction UseReducerExample() {\n    return (\n        <div>\n            <h2>useReducer</h2>\n            <Example1 />\n            <Example2 />\n        </div>\n    );\n}\n\nexport default UseReducerExample;","import React from 'react';\nimport UseStateExample from './components/useState';\nimport UseEffectExample from './components/useEffect';\nimport UseMemoExample from './components/useMemo';\nimport UseCallbackExample from './components/useCallback';\nimport UseContextExample from './components/useContext';\nimport UseReducer from './components/useReducer';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>Learning ReactJS Hooks</h1>\n                <UseStateExample />\n                <UseEffectExample />\n                <UseMemoExample />\n                <UseCallbackExample />\n                <UseContextExample />\n                <UseReducer />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}